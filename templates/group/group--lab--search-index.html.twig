{#
/**
 * @file
 * Theme override to display a group.
 *
 * Available variables:
 * - group: The group entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - group.getCreatedTime() will return the group creation timestamp.
 *   - group.hasField('field_example') returns TRUE if the group bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - group.isPublished() will return whether the group is published or not.
 *   Calling other methods, such as group.delete(), will result in an exception.
 *   See \Drupal\group\Entity\group for a full list of public properties and
 *   methods for the group object.
 * - label: (optional) The title of the group.
 * - content: All group items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The group author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this group.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current group.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - group: The current template type (also known as a "theming hook").
 *   - group--type-[type]: The current group type. For example, if the group is an
 *     "Article" it would result in "group--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - group--view-mode-[view_mode]: The View Mode of the group; for example, a
 *     teaser would result in: "group--view-mode-teaser", and
 *     full: "group--view-mode-full".
 *   The following are controlled through the group publishing options.
 *   - group--promoted: Appears on groups promoted to the front page.
 *   - group--sticky: Appears on groups ordered above other non-sticky groups in
 *     teaser listings.
 *   - group--unpublished: Appears on unpublished groups visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the group tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   group cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_group()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set classes = [
  'group',
  'group--type-' ~ group.bundle|clean_class,
  group.isPromoted() ? 'group--promoted',
  group.isSticky() ? 'group--sticky',
  not group.isPublished() ? 'group--unpublished',
  view_mode ? 'group--view-mode-' ~ view_mode|clean_class,
] %}

<div{{ attributes.addClass(classes) }}>
  {{ title_prefix }}
  {{ title_suffix }}

  <div{{ title_attributes }}>
    <a href="{{ url }}" rel="bookmark">{{ label }}</a>
  </div>

  {{ content }}
</div>
